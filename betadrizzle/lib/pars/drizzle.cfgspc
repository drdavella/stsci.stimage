_task_name_ = string_kw(default="drizzle")
input = string_kw(default="",comment="Rootname for output drizzled products")  #, trigger='_rule1_', comment='Input files (name, suffix, or @list)') 
output = string_kw(default="final_drz.fits",comment="name for output image") 
mdriztab = boolean_kw(default=True,comment="Use Multidrizzle parameter file specified in header?") 
refimage = string_kw(default="",comment="Reference image from which to obtain a WCS") 
runfile = string_kw(default="multidrizzle.run",comment=" File for logging the script commands") 
workinplace = boolean_kw(default=False,comment="Work on input files in place? (NOT RECOMMENDED)") 
updatewcs = boolean_kw(default=False,comment="Update the WCS keywords?") 
proc_unit = option_kw("native", "electrons", default="native",comment="")
coeffs = string_kw(default="header",comment="Use header-based distortion coefficients?") 
context = boolean_kw(default=False,comment="Create context image during final drizzle?") 
clean = boolean_kw(default=False,comment="Remove temporary files?") 
group = string_kw(default="",comment="Single extension or group to be combined/cleaned") 
ra = float_or_none_kw(default=None,comment="right ascension output frame center in decimal degrees") 
dec = float_or_none_kw(default=None,comment="declination output frame center in decimal degrees") 
build = boolean_kw(default=True,comment="Create multi-extension output file?")
shiftfile = string_kw(default="",comment="Shiftfile name") 
staticfile = string_kw(default="",comment="Name of (optional) input static bad-pixel mask") 
crbit = integer_kw(default=4096,comment="")
mode = string_kw(default="all")

[STEP 3: DRIZZLE SEPARATE IMAGES]
driz_separate = boolean_kw(default=False,comment="Drizzle onto separate output images?") 
driz_sep_outnx = float_or_none_kw(default=None,comment="Size of separate output frame's X-axis (pixels)") 
driz_sep_outny = float_or_none_kw(default=None,comment="Size of separate output frame's Y-axis (pixels)") 
driz_sep_kernel = option_kw("turbo","square","point", "gaussian", "tophat", "lanczos3", default="turbo",comment="Shape of kernel function") 
driz_sep_wt_scl = string_kw(default="exptime",comment="Weighting factor for input data image") 
driz_sep_scale = float_or_none_kw(default=None,comment="Absolute size of output pixels in arcsec/pixel") 
driz_sep_pixfrac = float_kw(default=1.,comment="Linear size of drop in input pixels") 
driz_sep_rot = float_or_none_kw(default=None,comment="Position Angle of drizzled image's Y-axis w.r.t. North (degrees)") 
driz_sep_fillval = string_kw(default=None,comment="Value to be assigned to undefined output points") 
driz_sep_bits = integer_kw(default=0,comment="Integer mask bit values considered good") 

[STEP 7: DRIZZLE FINAL COMBINED IMAGE]
driz_combine = boolean_kw(default=True,comment="Perform final drizzle image combination?")
final_wht_type = option_kw("EXP","ERR","IVM",default="EXP",comment="Type of weighting for final drizzle") 
final_outnx = float_or_none_kw(default=None,comment="Size of FINAL output frame X-axis (pixels)") 
final_outny = float_or_none_kw(default=None,comment="Size of FINAL output frame Y-axis (pixels)")
final_kernel = option_kw("square", "point","gaussian","turbo","tophat","lanczos3",default="square",comment="Shape of kernel function") 
final_wt_scl = string_kw(default="exptime",comment="Weighting factor for input data image")
final_scale = float_or_none_kw(default=None,comment="Absolute size of output pixels in arcsec/pixel")
final_pixfrac = float_kw(default=1.,comment="Linear size of drop in input pixels") 
final_rot = float_or_none_kw(default=0.,comment="Position Angle of drizzled image's Y-axis w.r.t. North (degrees)")
final_fillval = float_or_none_kw(default=None,comment="Value to be assigned to undefined output points") 
final_bits = integer_kw(default=0,comment="Integer mask bit values considered good") 
final_units = option_kw("counts", "cps", default="cps",comment="Units for final drizzle image (counts or cps)")

[ _RULES_ ]

_rule1_ = string_kw(default='', code='determine_if_mult_files(CFGOBJ)')
