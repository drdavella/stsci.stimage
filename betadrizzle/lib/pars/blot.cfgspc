_task_name_ = string_kw(default="blot")
input = string_kw(default="",comment="Input files (name, suffix, or @list)")  #, trigger='_rule1_') 
output = string_kw(default='final_drz.fits',comment="Rootname for output drizzled products") 
mdriztab = boolean_kw(default=True,comment="Use Multidrizzle parameter file specified in header?") 
refimage = string_kw(default="",comment="Reference image from which to obtain a WCS") 
runfile = string_kw(default="multidrizzle.run",comment="File for logging the script commands") 
workinplace = boolean_kw(default=False,comment="Work on input files in place? (NOT RECOMMENDED)") 
updatewcs = boolean_kw(default=False,comment="Update the WCS keywords?") 
proc_unit = option_kw("native", "electrons", default="native",comment="pixel units")
coeffs = string_kw(default="header",comment="Use header-based distortion coefficients?") 
context = boolean_kw(default=yes,comment="Create context image during final drizzle?") 
clean = boolean_kw(default=False,comment="Remove temporary files?") 
group = integer_or_none_kw(default=None,comment="Single extension or group to be combined/cleaned") 
ra = float_or_none_kw(default=None,comment="right ascension output frame center in decimal degrees") 
dec = float_or_none_kw(default=None,comment="declination output frame center in decimal degrees") 
build = boolean_kw(default=True,comment="Create multi-extension output file?")
shiftfile = string_kw(default="",comment="shiftfile name") 
staticfile = string_kw(default="",comment="Name of (optional) input static bad-pixel mask") 

mode = string_kw(default="all")

[STEP 5: BLOT BACK THE MEDIAN IMAGE]
blot = boolean_kw(default=true,comment="Blot the median back to the input frame?") 
blot_interp = option_kw("poly5","nearest","linear", "poly3", "sinc",default="poly5",comment="Interpolant (nearest,linear,poly3,poly5,sinc)") 
blot_sinscl = float_kw(default=1.0,comment="Scale for sinc interpolation kernel") 


[ _RULES_ ]

_rule1_ = string_kw(default='', code='determine_if_mult_files(CFGOBJ)')
