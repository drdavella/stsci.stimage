**Tweakreg** provides an automated interface for computing residual shifts
between input exposures being combined using AstroDrizzle. The offsets
computed by Tweakreg correspond to pointing differences after applying the WCS
information from the input image's headers.  Such errors would, for example,
be due to errors in guide-star positions when combining observations from
different observing visits or from slight offsets introduced upon re-acquiring
the guide stars in a slightly different position.

Examples
--------
This task can be run from either the TEAL GUI or from the Python command-line. 
These examples illustrate the syntax that can be used to run the task in a 
couple of common modes.

1. Run the task using the TEAL GUI under PyRAF:

    >>> import astrodrizzle 
    >>> epar tweakreg

2. Find only the shifts(no rotation or scale) for a set of calibrated ACS 
   (\_flt.fits) images using the built-in DAOFIND-like source finding 
   algorithm with sources >10 sigma above the background without using the 
   TEAL GUI:

  >>> from astrodrizzle import tweakreg
  >>> tweakreg.TweakReg('*flt.fits', editpars=False, findmode='imagefind', \
      editipars=False, computesig=True, threshold=10.0, fitgeometry='shift')



Parameters
----------
files : str or list of str
    Input files that are being registered. For more details, see description
    of `input` parameter.
editpars : bool
    Specify whether or not to edit the parameters using the TEAL GUI.
configObj : obj or None
    ConfigObj object containing user-specified parameters for running
    this task.
input_dict : dict
    User-specified parameter values for only those parameters that they
    want to change.

:Other Parameters from input_dict:

Parameters - Basic Initialization
---------------------------------
input : str or list of str
    Input files (passed in from *files* parameter) 
    This paramater can be provided in any of several forms:

     - filename of a single image
     - filename of an association (ASN)table
     - wild-card specification for files in directory (using \*, ? etc)
     - comma-separated list of filenames
     - '\@file' filelist containing list of desired input filenames
       (and optional inverse variance map filenames)

    The '\@file' filelist needs to be provided as an ASCII text file
    containing a list of filenames for all input images with one
    filename on each line of the file. If inverse variance maps have
    also been created by the user and are to be used (by specifying
    'IVM' to the parameter 'final_wht_type' described further below),
    then these are simply provided as a second column in the filelist,
    with each IVM filename listed on the same line as a second entry,
    after its corresponding exposure filename. [Default value: '*flt.fits']

refimage : str
    Filename of reference image. Sources derived from this image will be 
    used as the reference for matching with sources from all input images.
    [Default value: '']

findmode : str {'imagefind', 'sextractor'}
    This parameter specifies what method should be used to extract source
    catalogs from each input image. 
    
    Selection of 'sextractor' only specifies that should the 'sextractor'
    executable be found on the user's system, it will be used. Otherwise,
    'tweakreg' will use the built-in imagefind function by default. This 
    function is similar in operation to DAOFIND. [Default value: 'imagefind']

editipars : bool
    This parameter allows the user to specify whether or not they want to 
    edit the parameters for the built-in source finding algorithm if 'findmode'
    has been set to 'imagefind'. These parameters are described in the help for 
    `imagefind`_. [Default value: Yes]

editspars : bool
    This parameter allows the user to specify whether or not they want to
    edit the parameters associated with the Sextractor PSET if 'findmode'
    is set to 'sextractor', and if Sextractor has been installed. This
    pset provides access to a majority of the most commonly used
    parameters for 'sextractor' for use when 'findmode = sextractor'.
    Each parameter has the same name as the 'sextractor' parameter and
    is a direct pass-through to the corresponding 'sextractor' parameter
    in the executable. These parameters are described in the help for
    `sextractorpars`_. [Default value: Yes]

execname : string
    This parameter allows the user to specify the full path and filename 
    of the SExtractor executable they want to use.  This would generally
    only need to be set should the task not automatically find the 
    SExtractor executable or if more than 1 instance of SExtractor has been
    installed on the system.  
    [Default value: '']

writecat : bool
    Specify whether or not to write out the source catalogs generated for
    each input image by the built-in source extraction algorithm.
    [Default value: Yes]

clean : bool
    Specify whether or not to remove the temporary files created by
    'tweakreg', including any catalog files generated for the shift
    determination. [Default value = Yes]

verbose : bool
    Specify whether or not to print extra messages during
    processing. [Default value = No]


Parameters - Update Header
--------------------------
updatehdr : bool
    Specify whether or not to update the headers of each input image
    directly with the shifts that were determined. This will allow the
    input images to be combined by AstroDrizzle without having to provide
    the shiftfile as well. [Default value = False]

wcsname : str
    Name of updated WCS. [Default value = 'TWEAK']


Parameters - Optional Shiftfile Output
--------------------------------------
shiftfile : bool
    Create output shiftfile? [Default value: No]

outshifts : str
    The name for the output shift file created by 'tweakreg'.  This
    shiftfile will be formatted for use as direct input to AstroDrizzle.
    [Default value: 'shifts.txt']

outwcs : str
    Filename to be given to the OUTPUT reference WCS file created
    by 'tweakreg'. This reference WCS defines the WCS from which the
    shifts get measured, and will be used by AstroDrizzle to interpret
    those shifts. This reference WCS file will be a FITS file that
    only contains the WCS keywords in a Primary header with no image
    data itself. The values will be derived from the FIRST input image
    specified. [Default value: 'tweak_wcs.fits']


Parameters - Coordinate File Description
----------------------------------------
catfile:str
    Name of file that contains a list of input images and associated
    catalog files generated by the user. Each line of this file will
    contain the name of an input image in the first column, and the 
    name of the catalog file for that image in the second column.
    [Default value: '']

xcol : int
    Column number of X position from the user-generated catalog files
    specified in the catfile. [Default value = 1]

ycol : int
    Column number of Y position from the user-generated catalog files
    specified in the catfile. [Default value = 2]

fluxcol : int
    Column number for the flux values from the user-generated catalog
    files specified in the catfile. These values will only be used if
    a flux limit has been specified by the user using the 'fluxmax' or
    'fluxmin' parameters. [Default value = None]

fluxmax : float
    Limiting flux value for selecting valid objects in the input image's
    catalog.  If specified, this flux will serve as the upper limit of a
    range for selecting objects to be used in matching with objects 
    identified in the reference image. If the value is set to INDEF, all 
    objects with fluxes brighter than the minimum specified in 'fluxmin' 
    will be used. If both values are set to INDEF, all objects will be used. 
    [Default value = None]

fluxmin : float
    Limiting flux value for selecting valid objects in the input image's
    catalog. If specified, this flux value will serve as the lower limit
    of a range for selecting objects to be used in matching with objects
    identified in the reference image. If the value is set to INDEF, all 
    objects fainter than the limit specified by 'fluxmax' will be used. 
    If both values are set to INDEF, all objects will be used. 
    [Default value = None]

fluxunits : str {'counts', 'cps', 'mag'}
    This allows the task to correctly interpret the flux limits specified
    by 'fluxmax' and 'fluxmin' when sorting the object list for trimming
    of fainter objects. [Default value = 'counts']

xyunits : str {'pixels', 'degrees'}
    Specifies whether the positions in this catalog are already sky pixel
    positions, or whether they need to be transformed to the sky. 
    [Default value = 'pixels']
    
nbright : int
    The number of brightest objects to keep after sorting the full object 
    list. If nbright is set equal to None, all objects will be used. 
    [Default value = None]


Parameters - Reference Catalog Description
------------------------------------------
refcat : str
    Name of the external reference catalog file to be used in place of the 
    catalog extracted from one of the input images. [Default value = '']

refxcol : int
    Column number of RA in the external catalog file specified by the
    refcat. [Default value = 1]

refycol : int
    Column number of Dec in the external catalog file specified by the
    refcat. [Default value = 2]

refxyunits : str {'pixels','degrees'}
    Units of sky positions. [Default value = 'degrees']

rfluxcol : int
    Column number of flux/magnitude values in the external catalog file
    specified by the refcat. [Default value = None]

rfluxmax : float
    Limiting flux value used to select valid objects in the external
    catalog. If specified, the flux value will serve as the upper limit 
    of a range for selecting objects to be used in matching with objects 
    identified in the reference image. If the value is set to INDEF, 
    all objects with fluxes brighter than the minimum specified in 
    'rfluxmin' will be used. If both values are set to INDEF, all 
    objects will be used. [Default value = None]

rfluxmin : float
    Limiting flux value used to select valid objects in the external
    catalog. If specified, the flux will serve as the lower limit
    of a range for selecting objects to be used in matching with objects
    identified in the reference image. If the value is set to INDEF, 
    all objects fainter than the limit specified by 'rfluxmax' will be 
    used. If both values are set to INDEF, all objects will be used. 
    [Default value = None]

rfluxunits : {'counts', 'cps', 'mag'}
    This allows the task to correctly interpret the flux limits specified
    by 'rfluxmax' and 'rfluxmin' when sorting the object list for trimming
    of fainter objects. [Default value = 'mag']

refnbright : int
    Number of brightest objects to keep after sorting the full object
    list. If refnbright is set to None, all objects will be used. Used in 
    conjunction with refcat. [Default value = None]


Parameters - Object Matching
----------------------------
minobj : int
    Minimum number of identified objects from each input image to use
    in matching objects from other images. [Default value = 15]

searchrad : float
    The search radius for a match. [Default value = 1.0]

searchunits : str
    Units for search radius. [Default value = 'arcseconds']

use2dhist : bool
    Use 2d histogram to find initial offset? [Default value = Yes]

see2dplot : bool
    See 2d histogram for initial offset? [Default value = No]

tolerance : float 
    The matching tolerance in pixels after applying an initial solution
    derived from the 'triangles' algorithm.  This parameter gets passed
    directly to `xyxymatch` for use in matching the object lists from each
    image with the reference image's object list. [Default value = 1.0]

separation : float 
    The  minimum  separation for objects in the input and reference
    coordinate lists. Objects closer together than 'separation' pixels
    are removed from the input and reference coordinate lists prior
    to matching. This parameter gets passed directly to `xyxymatch` for
    use in matching the object lists from each image with the reference
    image's object list. [Default value = 0.0]

xoffset : float
    Initial estimate for the offset in X between the images and the
    reference frame. This offset will be used for all input images 
    provided. If the parameter value is set to None, no offset will 
    be assumed in matching sources in 'xyxymatch'. [Default value = 0.0]

yoffset : float
    Initial estimate for the offset in Y between the images and the
    reference frame. This offset will be used for all input images 
    provided.If the parameter value is set to None, no offset will 
    be assumed in matching sources in 'xyxymatch'. [Default value = 0.0]


Parameters - Catalog Fitting
----------------------------
fitgeometry : str {'shift', 'rscale', 'general'}
    The fitting geometry to be used in fitting the matched object lists.
    This parameter is used in fitting the offsets, rotations and/or scale
    changes from the matched object lists. [Default value = 'rscale']

residplot : str {'No plot', 'vector', 'residuals'}
    Plot residuals from fit?  [Default value = 'No plot']

nclip : int
    Number of clipping iterations in fit. [Default value = 0]

sigma : float
    Clipping limit in sigma units. [Default value = 3.0]


Notes
-----
Tweakreg supports the use of calibrated, distorted images (such as FLT
images for ACS and WFC3, or _c0m.fits images for WFPC2) as input images.
All coordinates for sources derived from these images (either by this task
or as provided by the user directly) will be corrected for distortion using
the distortion model information specified in each image's header. This 
eliminates the need to run 'astrodrizzle' on the input images prior to 
running `tweakreg`_.

.. note:: All calibrated input images must have been updated using 
          'updatewcs' from the STWCS package, or as run by 'astrodrizzle', 
          to include the full distortion model in the header. 

This task will use catalogs, and catalog-matching, based on the 'xyxymatch' 
algorithm to determine the offset between the input images. The primary
mode of operation will be to extract a catalog of source positions from 
each input image using either a 'DAOFIND-like' algorithm or SExtractor (if
the user has SExtractor installed). Alternatively, the user can provide 
their catalogs of source positions derived from **each input chip**.  

The reference frame will be defined either by:

    * the first input image (and associated catalog), 
    * a catalog derived from a reference image specified by the user, or 
    * a catalog of undistorted sky positions (RA/Dec) and fluxes 
        provided by the user.

For a given observation, the distortion model is applied to all distorted
input positions, and the sources from each chip are then combined into a
single catalog of undistorted positions.

The undistorted positions for each observation then get passed to 
'xyxymatch' for matching to objects from the reference catalog.

The source lists from each image will generally include cosmic-rays as
detected sources, which can at times significantly confuse object 
identification between images. Observations that include long exposures
often have more cosmic-ray events than source objects. As such, isolating
the cosmic-ray events in those cases would significantly improve the
efficiency of common source identification between images. One such method 
for trimming potential false detections from each source list would be
to set a flux limit to exclude detections below that limit. As the fluxes
reported in the default source object lists are provided as magnitude
values, setting the *fluxmax* or *fluxmin* parameter value to a magnitude-
based limit, and then setting the *ascend* parameter to *True*, will allow
for the creations of catalogs trimmed of all sources fainter than the 
provided limit. The trimmed source list can then be used in matching 
sources between images and in establishing the final fitting for the shifts.

A fit can then be performed on the matched set of positions between the
input and the reference to produce the 'shiftfile'. If the user is
confident that the solution will be correct, the header of each input image
can be updated directly with the fit derived for that image. Otherwise,
the 'shiftfile' can be passed to AstroDrizzle for aligning the images.

See Also
--------
astrodrizzle

